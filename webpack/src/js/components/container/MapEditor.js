import React, { Component } from 'react';
import ReactDOM from 'react-dom';
import Map from './Map';

/**
 * The header at the top of the page.
 *
 * @param props
 * @returns {*}
 * @constructor
 */
function Header(props) {
	return <h1 className="header">{props.title}</h1>;
}

function Statistics(props) {
	console.log(props.info.width);
	console.log(props.info.height);
	console.log(props.view.x);
	console.log(props.view.y);
	console.log(props.view.scale);
    return (
        <div class="header-stats">
            <dl class="statistics">
                <dt>Width</dt>
                <dd><PrettyNumber value={props.info.width}/></dd>
                <dt>Height</dt>
                <dd><PrettyNumber value={props.info.height}/></dd>
                <dt>X</dt>
                <dd><PrettyNumber value={props.view.x}/></dd>
                <dt>Y</dt>
                <dd><PrettyNumber value={props.view.y}/></dd>
                <dt>Scale</dt>
                <dd><PrettyNumber value={props.view.scale}/></dd>
            </dl>
        </div>
    );
}

function PrettyNumber(props) {
	return props.value;
	//return props.value.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')
}

class MapEditor extends React.Component {

	constructor(props) {
		super(props);
		this.state = {
			info: false,
            view: false
		}
	}

	componentDidMount() {
		var _self = this;

		// Get the id of the current map from the base HTML page. This was generated by the Spark template.
		var appData = document.getElementById("app");
		var mapName = appData.getAttribute("mapName");

		fetch("/api/map/" + mapName, { headers: { 'Content-Type': 'application.json'}})
			.then(function(response) {
				return response.json();
			})
			.then(function(data) {
				_self.setState({ info: data });
				_self.setState( { view: { x: parseInt(data.width / 2), y: parseInt(data.height /2 ), scale: 48 } })
			})
			.catch(function(error) {
				console.log(error);
			})
	}

	renderHeader(title) {
		return <Header title={title} />;
	}

	renderStatistics(info, view) {
	    return <Statistics info={info} view={view} />
    }

    renderMap(info, view) {
		return <Map info={info} view={view} />
	}

	render() {
		if (this.state.info && this.state.view) {
		    console.log(this.state.info.title);
			return (
				<div>
					<div className="heading">
						{this.renderHeader(this.state.info.title)}
					</div>
                    <div className="statistics">
                        {this.renderStatistics(this.state.info, this.state.view)}
                    </div>
					<div>
						<Map info={this.state.info} view={this.state.view}/>
					</div>
				</div>
			);
		} else {
			return false;
		}
	}
}

ReactDOM.render(
	<MapEditor />,
	document.getElementById('root')
);

